{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactApp\\\\src\\\\components\\\\Inventory.js\";\nimport React from 'react';\nimport AddFishform from './AddFishform';\nimport EditFish from \"./EditFish\";\nimport Login from './Login';\nimport firebase, { auth } from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      uid: null,\n      owner: null\n    };\n\n    this.authHandler = async authdata => {\n      // look up a store ito the firebase.\n      const store = await base.fetch(this.props.storeId, {\n        context: this\n      }); //claim if there is no owner.\n\n      if (!store.owner) {\n        await base.post(`${this.props.storeId}/owner`, {\n          data: authdata.user.uid\n        });\n      } //set the state of the inventory compnent.\n\n\n      this.setState({\n        uid: authdata.user.uid,\n        owner: store.owner || authdata.user.uid\n      });\n    };\n\n    this.authenticate = provider => {\n      const authprovider = new firebase.auth[`${provider}AuthProvider`]();\n      firebase.auth().signInWithPopup(authprovider).then(this.authHandler);\n    };\n\n    this.logout = async () => {\n      await firebase.auth().signOut();\n      this.setState({\n        uid: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({\n          user\n        });\n      }\n    });\n  }\n\n  render() {\n    const logout = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }\n    }, \"LogOut\");\n\n    if (!this.state.uid) {\n      return /*#__PURE__*/React.createElement(Login, {\n        authenticate: this.authenticate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.uid !== this.state.owner) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, \"Sorry you are not the owner!!\"), logout);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inventory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(key => /*#__PURE__*/React.createElement(EditFish, {\n      fish: this.props.fishes[key],\n      key: key,\n      index: key,\n      updatestate: this.props.updatestate,\n      Removefish: this.props.Removefish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(AddFishform, {\n      addfishstate: this.props.addstate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.loadsamplefishes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    }, \"Load Sample Fishes\"));\n  }\n\n}\n\nexport default Inventory;","map":{"version":3,"sources":["E:/ReactApp/src/components/Inventory.js"],"names":["React","AddFishform","EditFish","Login","firebase","auth","base","firebaseApp","Inventory","Component","state","uid","owner","authHandler","authdata","store","fetch","props","storeId","context","post","data","user","setState","authenticate","provider","authprovider","signInWithPopup","then","logout","signOut","componentDidMount","onAuthStateChanged","render","Object","keys","fishes","map","key","updatestate","Removefish","addstate","loadsamplefishes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AddFishform from './AddFishform';\r\nimport EditFish from \"./EditFish\";\r\nimport Login from './Login';\r\nimport firebase, { auth } from \"firebase\";\r\nimport base,{firebaseApp} from \"../base\";\r\nclass Inventory extends React.Component{\r\n\r\n    state={\r\n        uid:null,\r\n        owner:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(user=>{\r\n            if(user){\r\n                this.authHandler({user});\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler= async (authdata)=>{\r\n        // look up a store ito the firebase.\r\n        const store = await base.fetch(this.props.storeId,{context:this});\r\n        //claim if there is no owner.\r\n        if(!store.owner){\r\n            await base.post(`${this.props.storeId}/owner`,{\r\n                data:authdata.user.uid\r\n            });\r\n        }\r\n        //set the state of the inventory compnent.\r\n        this.setState({\r\n            uid:authdata.user.uid,\r\n            owner:store.owner || authdata.user.uid\r\n        });\r\n\r\n    }\r\n    authenticate=(provider)=>{\r\n        const authprovider =new firebase.auth[`${provider}AuthProvider`]();\r\n        firebase.auth().signInWithPopup(authprovider).then(this.authHandler); \r\n    }\r\n\r\n    logout = async () =>{\r\n        await firebase.auth().signOut();\r\n        this.setState({\r\n            uid:null\r\n        });\r\n    }\r\n    \r\n    \r\n    render(){\r\n        const logout=<button onClick={this.logout}>LogOut</button>\r\n        if(!this.state.uid){\r\n            return <Login authenticate={this.authenticate}/>\r\n        }\r\n        if(this.state.uid !== this.state.owner){\r\n            return (\r\n                <div>\r\n                    <p>Sorry you are not the owner!!</p>\r\n                    {logout}\r\n                </div>\r\n                \r\n            );\r\n        }\r\n        return(\r\n            <div className=\"inventory\">\r\n               <h2>Inventory</h2>\r\n               {logout}\r\n                {Object.keys(this.props.fishes).map(key=>(<EditFish fish={this.props.fishes[key]} key={key} index={key} updatestate={this.props.updatestate} Removefish={this.props.Removefish}/>))}\r\n               <AddFishform addfishstate={this.props.addstate}/>\r\n               <button onClick={this.props.loadsamplefishes}>Load Sample Fishes</button>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}